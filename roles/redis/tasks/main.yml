---
- name: Install Redis
  apt:
    name:
      - redis-server
      - python3-redis
    state: present

- name: Check Redis config file locations
  stat:
    path: "{{ item }}"
  register: redis_config_files
  loop:
    - /etc/redis/redis.conf
    - /etc/redis.conf
    - /etc/redis/6379.conf
  check_mode: no

- name: Set Redis config path
  set_fact:
    redis_config_path: "{{ item.item }}"
  when: item.stat.exists
  loop: "{{ redis_config_files.results }}"
  loop_control:
    label: "{{ item.item }}"

- name: Configure Redis
  lineinfile:
    path: "{{ redis_config_path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  loop:
    - { regexp: '^bind', line: 'bind 127.0.0.1' }
    - { regexp: '^# maxmemory <bytes>', line: 'maxmemory 256mb' }
    - { regexp: '^# maxmemory-policy', line: 'maxmemory-policy allkeys-lru' }
    - { regexp: '^save', line: 'save 900 1' }
    - { regexp: '^appendonly', line: 'appendonly yes' }
  when: redis_config_path is defined
  notify: restart redis

- name: Set Redis password if defined
  lineinfile:
    path: "{{ redis_config_path }}"
    regexp: '^# requirepass'
    line: 'requirepass {{ redis_password }}'
    backup: yes
  when: redis_password != "" and redis_config_path is defined
  notify: restart redis

- name: Debug Redis config issue
  debug:
    msg: "Redis config file not found. Checked: /etc/redis/redis.conf, /etc/redis.conf, /etc/redis/6379.conf"
  when: redis_config_path is not defined

- name: Check if redis-server service exists
  stat:
    path: "{{ item }}"
  register: redis_service_checks
  loop:
    - /lib/systemd/system/redis-server.service
    - /usr/lib/systemd/system/redis-server.service
    - /lib/systemd/system/redis.service
    - /usr/lib/systemd/system/redis.service
  check_mode: no

- name: Set redis service exists fact
  set_fact:
    redis_service_exists: "{{ redis_service_checks.results | selectattr('stat.exists') | list | length > 0 }}"

- name: Set redis service name
  set_fact:
    redis_service_name: "{{ (redis_service_checks.results | selectattr('stat.exists') | first).item | basename | regex_replace('\\.service$', '') }}"
  when: redis_service_exists

- name: Start and enable Redis service
  systemd:
    name: "{{ redis_service_name }}"
    state: started
    enabled: yes
  when: redis_service_exists
  ignore_errors: yes

- name: Debug Redis service issue
  debug:
    msg: "Redis service not found. Checked: /lib/systemd/system/ and /usr/lib/systemd/system/ for redis-server.service and redis.service"
  when: not redis_service_exists

- name: Test Redis connection
  command: redis-cli ping
  register: redis_test
  changed_when: false
  when: redis_service_exists
  ignore_errors: yes

- name: Display Redis test result
  debug:
    msg: "Redis response: {{ redis_test.stdout }}"
  when: redis_test is defined and redis_test.stdout is defined
